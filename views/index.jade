extends layouts/default

block fb_meta
  meta(property='og:site_name', content='PartJS')
  meta(property='og:title', content='Full Stack Boilerplates')
  meta(property='og:url', content='#{currentURL("")}')
  meta(property='og:image', content='')
  meta(property='article:published_time', content='')
  
block head
  title #{projectName}

block neck
  link(rel='stylesheet', href='/views/index.min.css?#{cacheBreaker}')

block feet
  script(src='/views/build/index.js')

block body
  section#landing
    img.background-attach(src='/images/gallery/main.jpeg')
    .row
      .col-md-7
        //div.pull-right(style='background: #fcfcfc; padding: 30px 90px 60px 30px; opacity: 0.8; filter: alpha(opacity=80); margin-top: -450px;')
        div.pull-right(style='padding: 30px 70px 60px 30px; opacity: 0.8; filter: alpha(opacity=80); margin-top: -650px;')
          h3(style='font-size:58px;') Data Crawler for open sample
            
  section
    .container(style='margin-top: 30px; margin-bottom: 80px;')
      .row
        .col-md-6.col-md-offset-3.text-center
          h2(style='margin-bottom: 30px;') Spot
          pre
            | /* How to use the crawler. */
            | 
            | // Step 1: The code in the /views/crawler/index.js.
            | 
            | 
            | // Step 2: Use npm module cheerio
            | var cheerio = require("cheerio");
            |   request({
            |   url: "http://www.imdb.com/title/tt1229340/",
            |   method: "GET"
            |   }, function(error,response,html) {
            |   if(error || !html) { return; }
            |   var $ = cheerio.load(html);
            |   
            | 
            | // Step 3: Add a URL router to fininsh this API
            | // * The URL router path : router.js
            | // * Set the REST API name.
            | app.get('/1/crawler', require('./views/crawler/index').init);
            | app.get('/1/crawlerimdb', require('./views/crawler/index').imdb);
          
            
      
